{"expireTime":9007200819376324000,"key":"gatsby-plugin-mdx-entire-payload-a649adf5bdfc574e3cc9faab33821c91-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import {\n  ExpansionPanel,\n  ExpansionPanelList,\n  ExpansionPanelListItem\n} from '../src/components/expansion-panel';","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":5,"column":44,"offset":117},"indent":[1,1,1,1]}},{"type":"jsx","value":"<ExpansionPanel title=\"How to configure an Apollo project\">","position":{"start":{"line":7,"column":1,"offset":119},"end":{"line":7,"column":60,"offset":178},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Follow these three steps to set up an Apollo project:","position":{"start":{"line":9,"column":1,"offset":180},"end":{"line":9,"column":54,"offset":233},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":180},"end":{"line":9,"column":54,"offset":233},"indent":[]}},{"type":"jsx","value":"<ExpansionPanelList>\n<ExpansionPanelListItem number=\"1\">","position":{"start":{"line":11,"column":1,"offset":235},"end":{"line":12,"column":36,"offset":291},"indent":[1]}},{"type":"jsx","value":"<h4>Install the Apollo CLI</h4>","position":{"start":{"line":14,"column":1,"offset":293},"end":{"line":14,"column":32,"offset":324},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To install the ","position":{"start":{"line":16,"column":1,"offset":326},"end":{"line":16,"column":16,"offset":341},"indent":[]}},{"type":"link","title":null,"url":"https://npm.im/apollo","children":[{"type":"inlineCode","value":"apollo","position":{"start":{"line":16,"column":17,"offset":342},"end":{"line":16,"column":25,"offset":350},"indent":[]}},{"type":"text","value":" CLI","position":{"start":{"line":16,"column":25,"offset":350},"end":{"line":16,"column":29,"offset":354},"indent":[]}}],"position":{"start":{"line":16,"column":16,"offset":341},"end":{"line":16,"column":53,"offset":378},"indent":[]}},{"type":"text","value":", ensure that ","position":{"start":{"line":16,"column":53,"offset":378},"end":{"line":16,"column":67,"offset":392},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":16,"column":67,"offset":392},"end":{"line":16,"column":73,"offset":398},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":16,"column":73,"offset":398},"end":{"line":16,"column":78,"offset":403},"indent":[]}},{"type":"inlineCode","value":"npm","position":{"start":{"line":16,"column":78,"offset":403},"end":{"line":16,"column":83,"offset":408},"indent":[]}},{"type":"text","value":" are both installed, then run:","position":{"start":{"line":16,"column":83,"offset":408},"end":{"line":16,"column":113,"offset":438},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":326},"end":{"line":16,"column":113,"offset":438},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"npm install --global apollo","position":{"start":{"line":18,"column":1,"offset":440},"end":{"line":20,"column":4,"offset":479},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":22,"column":3,"offset":483},"end":{"line":22,"column":8,"offset":488},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":481},"end":{"line":22,"column":10,"offset":490},"indent":[]}},{"type":"text","value":" This guide will utilize the global installation method, but the ","position":{"start":{"line":22,"column":10,"offset":490},"end":{"line":22,"column":75,"offset":555},"indent":[]}},{"type":"inlineCode","value":"apollo","position":{"start":{"line":22,"column":75,"offset":555},"end":{"line":22,"column":83,"offset":563},"indent":[]}},{"type":"text","value":" command can also be installed in a project's ","position":{"start":{"line":22,"column":83,"offset":563},"end":{"line":22,"column":129,"offset":609},"indent":[]}},{"type":"inlineCode","value":"devDependencies","position":{"start":{"line":22,"column":129,"offset":609},"end":{"line":22,"column":146,"offset":626},"indent":[]}},{"type":"text","value":" and used via ","position":{"start":{"line":22,"column":146,"offset":626},"end":{"line":22,"column":160,"offset":640},"indent":[]}},{"type":"link","title":null,"url":"https://docs.npmjs.com/misc/scripts","children":[{"type":"inlineCode","value":"npm-scripts","position":{"start":{"line":22,"column":161,"offset":641},"end":{"line":22,"column":174,"offset":654},"indent":[]}}],"position":{"start":{"line":22,"column":160,"offset":640},"end":{"line":22,"column":212,"offset":692},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":22,"column":212,"offset":692},"end":{"line":22,"column":216,"offset":696},"indent":[]}},{"type":"link","title":null,"url":"https://npm.im/npx","children":[{"type":"inlineCode","value":"npx","position":{"start":{"line":22,"column":217,"offset":697},"end":{"line":22,"column":222,"offset":702},"indent":[]}}],"position":{"start":{"line":22,"column":216,"offset":696},"end":{"line":22,"column":243,"offset":723},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":22,"column":243,"offset":723},"end":{"line":22,"column":244,"offset":724},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":481},"end":{"line":22,"column":244,"offset":724},"indent":[]}},{"type":"jsx","value":"</ExpansionPanelListItem>\n<ExpansionPanelListItem number=\"2\">","position":{"start":{"line":24,"column":1,"offset":726},"end":{"line":25,"column":36,"offset":787},"indent":[1]}},{"type":"jsx","value":"<h4>Get your Engine API key</h4>","position":{"start":{"line":27,"column":1,"offset":789},"end":{"line":27,"column":33,"offset":821},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To get an API key, you will need to ","position":{"start":{"line":29,"column":1,"offset":823},"end":{"line":29,"column":37,"offset":859},"indent":[]}},{"type":"link","title":null,"url":"https://engine.apollographql.com","children":[{"type":"text","value":"log in to Engine","position":{"start":{"line":29,"column":38,"offset":860},"end":{"line":29,"column":54,"offset":876},"indent":[]}}],"position":{"start":{"line":29,"column":37,"offset":859},"end":{"line":29,"column":89,"offset":911},"indent":[]}},{"type":"text","value":" and create a new service by clicking the \"Add Service\" button. If you already have a service, get your API key by visiting your service's settings page. Once you have your API key, add it to your ","position":{"start":{"line":29,"column":89,"offset":911},"end":{"line":29,"column":286,"offset":1108},"indent":[]}},{"type":"inlineCode","value":".env","position":{"start":{"line":29,"column":286,"offset":1108},"end":{"line":29,"column":292,"offset":1114},"indent":[]}},{"type":"text","value":" file like so:","position":{"start":{"line":29,"column":292,"offset":1114},"end":{"line":29,"column":306,"offset":1128},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":823},"end":{"line":29,"column":306,"offset":1128},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ENGINE_API_KEY=service:foobar:d1rzyrmanmrZXxTTQLxghX","position":{"start":{"line":31,"column":1,"offset":1130},"end":{"line":33,"column":4,"offset":1190},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The Apollo CLI will be looking for your ","position":{"start":{"line":35,"column":1,"offset":1192},"end":{"line":35,"column":41,"offset":1232},"indent":[]}},{"type":"inlineCode","value":".env","position":{"start":{"line":35,"column":41,"offset":1232},"end":{"line":35,"column":47,"offset":1238},"indent":[]}},{"type":"text","value":" file because it uses your Engine API key to authenticate with the schema registry when it pushes your schema.","position":{"start":{"line":35,"column":47,"offset":1238},"end":{"line":35,"column":157,"offset":1348},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1192},"end":{"line":35,"column":157,"offset":1348},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":37,"column":3,"offset":1352},"end":{"line":37,"column":8,"offset":1357},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1350},"end":{"line":37,"column":10,"offset":1359},"indent":[]}},{"type":"text","value":" Make sure your ","position":{"start":{"line":37,"column":10,"offset":1359},"end":{"line":37,"column":26,"offset":1375},"indent":[]}},{"type":"inlineCode","value":".env","position":{"start":{"line":37,"column":26,"offset":1375},"end":{"line":37,"column":32,"offset":1381},"indent":[]}},{"type":"text","value":" file is in the root of your project so the Apollo CLI knows where to find it. You can also export ","position":{"start":{"line":37,"column":32,"offset":1381},"end":{"line":37,"column":131,"offset":1480},"indent":[]}},{"type":"inlineCode","value":"ENGINE_API_KEY","position":{"start":{"line":37,"column":131,"offset":1480},"end":{"line":37,"column":147,"offset":1496},"indent":[]}},{"type":"text","value":" as an environment variable.","position":{"start":{"line":37,"column":147,"offset":1496},"end":{"line":37,"column":175,"offset":1524},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1350},"end":{"line":37,"column":175,"offset":1524},"indent":[]}},{"type":"jsx","value":"</ExpansionPanelListItem>\n<ExpansionPanelListItem number=\"3\">","position":{"start":{"line":39,"column":1,"offset":1526},"end":{"line":40,"column":36,"offset":1587},"indent":[1]}},{"type":"jsx","value":"<h4>Create an apollo.config.js file</h4>","position":{"start":{"line":42,"column":1,"offset":1589},"end":{"line":42,"column":41,"offset":1629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The commands executed through the Apollo CLI will be looking for your Apollo config to inform their behavior. To set up schema registration, you'll need to configure a source that the CLI can fetch your schema from like so:","position":{"start":{"line":44,"column":1,"offset":1631},"end":{"line":44,"column":224,"offset":1854},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1631},"end":{"line":44,"column":224,"offset":1854},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// apollo.config.js\nmodule.exports = {\n  service: {\n    endpoint: {\n      url: \"http://localhost:4000\"\n    }\n    // OR\n    localSchemaFile: './path/to/schema.graphql'\n  }\n};","position":{"start":{"line":46,"column":1,"offset":1856},"end":{"line":57,"column":4,"offset":2039},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":59,"column":1,"offset":2041},"end":{"line":59,"column":5,"offset":2045},"indent":[]}},{"type":"link","title":null,"url":"/references/apollo-config/#clientservice","children":[{"type":"text","value":"Apollo config documentation","position":{"start":{"line":59,"column":6,"offset":2046},"end":{"line":59,"column":33,"offset":2073},"indent":[]}}],"position":{"start":{"line":59,"column":5,"offset":2045},"end":{"line":59,"column":76,"offset":2116},"indent":[]}},{"type":"text","value":" has more details and advanced configuration options for the ","position":{"start":{"line":59,"column":76,"offset":2116},"end":{"line":59,"column":137,"offset":2177},"indent":[]}},{"type":"inlineCode","value":"apollo.config.js","position":{"start":{"line":59,"column":137,"offset":2177},"end":{"line":59,"column":155,"offset":2195},"indent":[]}},{"type":"text","value":" format.","position":{"start":{"line":59,"column":155,"offset":2195},"end":{"line":59,"column":163,"offset":2203},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2041},"end":{"line":59,"column":163,"offset":2203},"indent":[]}},{"type":"jsx","value":"</ExpansionPanelListItem>\n<ExpansionPanelListItem number=\"check\">\n  You're done!\n</ExpansionPanelListItem>\n</ExpansionPanelList>","position":{"start":{"line":61,"column":1,"offset":2205},"end":{"line":65,"column":22,"offset":2333},"indent":[1,1,1,1]}},{"type":"jsx","value":"</ExpansionPanel>","position":{"start":{"line":67,"column":1,"offset":2335},"end":{"line":67,"column":18,"offset":2352},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":70,"column":1,"offset":2355},"end":{"line":70,"column":31,"offset":2385},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":70,"column":31,"offset":2385}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport {\n  ExpansionPanel,\n  ExpansionPanelList,\n  ExpansionPanelListItem\n} from '../src/components/expansion-panel';\nexport const _frontmatter = {}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <ExpansionPanel title=\"How to configure an Apollo project\" mdxType=\"ExpansionPanel\">\n      <p>{`Follow these three steps to set up an Apollo project:`}</p>\n      <ExpansionPanelList mdxType=\"ExpansionPanelList\">\n        <ExpansionPanelListItem number=\"1\" mdxType=\"ExpansionPanelListItem\">\n          <h4>Install the Apollo CLI</h4>\n          <p>{`To install the `}<a parentName=\"p\" {...{\n              \"href\": \"https://npm.im/apollo\"\n            }}><code parentName=\"a\" {...{\n                \"className\": \"language-text\"\n              }}>{`apollo`}</code>{` CLI`}</a>{`, ensure that `}<code parentName=\"p\" {...{\n              \"className\": \"language-text\"\n            }}>{`node`}</code>{` and `}<code parentName=\"p\" {...{\n              \"className\": \"language-text\"\n            }}>{`npm`}</code>{` are both installed, then run:`}</p>\n          <div {...{\n            \"className\": \"gatsby-highlight\",\n            \"data-language\": \"bash\"\n          }}><pre parentName=\"div\" {...{\n              \"style\": {\n                \"counterReset\": \"linenumber NaN\"\n              },\n              \"className\": \"language-bash line-numbers\"\n            }}><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}><span parentName=\"code\" {...{\n                  \"className\": \"token function\"\n                }}>{`npm`}</span>{` `}<span parentName=\"code\" {...{\n                  \"className\": \"token function\"\n                }}>{`install`}</span>{` --global apollo`}</code><span parentName=\"pre\" {...{\n                \"aria-hidden\": \"true\",\n                \"className\": \"line-numbers-rows\",\n                \"style\": {\n                  \"whiteSpace\": \"normal\",\n                  \"width\": \"auto\",\n                  \"left\": \"0\"\n                }\n              }}><span parentName=\"span\"></span></span></pre></div>\n          <p><strong parentName=\"p\">{`Note:`}</strong>{` This guide will utilize the global installation method, but the `}<code parentName=\"p\" {...{\n              \"className\": \"language-text\"\n            }}>{`apollo`}</code>{` command can also be installed in a project's `}<code parentName=\"p\" {...{\n              \"className\": \"language-text\"\n            }}>{`devDependencies`}</code>{` and used via `}<a parentName=\"p\" {...{\n              \"href\": \"https://docs.npmjs.com/misc/scripts\"\n            }}><code parentName=\"a\" {...{\n                \"className\": \"language-text\"\n              }}>{`npm-scripts`}</code></a>{` or `}<a parentName=\"p\" {...{\n              \"href\": \"https://npm.im/npx\"\n            }}><code parentName=\"a\" {...{\n                \"className\": \"language-text\"\n              }}>{`npx`}</code></a>{`.`}</p>\n        </ExpansionPanelListItem>\n        <ExpansionPanelListItem number=\"2\" mdxType=\"ExpansionPanelListItem\">\n          <h4>Get your Engine API key</h4>\n          <p>{`To get an API key, you will need to `}<a parentName=\"p\" {...{\n              \"href\": \"https://engine.apollographql.com\"\n            }}>{`log in to Engine`}</a>{` and create a new service by clicking the \"Add Service\" button. If you already have a service, get your API key by visiting your service's settings page. Once you have your API key, add it to your `}<code parentName=\"p\" {...{\n              \"className\": \"language-text\"\n            }}>{`.env`}</code>{` file like so:`}</p>\n          <div {...{\n            \"className\": \"gatsby-highlight\",\n            \"data-language\": \"text\"\n          }}><pre parentName=\"div\" {...{\n              \"style\": {\n                \"counterReset\": \"linenumber NaN\"\n              },\n              \"className\": \"language-text line-numbers\"\n            }}><code parentName=\"pre\" {...{\n                \"className\": \"language-text\"\n              }}>{`ENGINE_API_KEY=service:foobar:d1rzyrmanmrZXxTTQLxghX`}</code><span parentName=\"pre\" {...{\n                \"aria-hidden\": \"true\",\n                \"className\": \"line-numbers-rows\",\n                \"style\": {\n                  \"whiteSpace\": \"normal\",\n                  \"width\": \"auto\",\n                  \"left\": \"0\"\n                }\n              }}><span parentName=\"span\"></span></span></pre></div>\n          <p>{`The Apollo CLI will be looking for your `}<code parentName=\"p\" {...{\n              \"className\": \"language-text\"\n            }}>{`.env`}</code>{` file because it uses your Engine API key to authenticate with the schema registry when it pushes your schema.`}</p>\n          <p><strong parentName=\"p\">{`Note:`}</strong>{` Make sure your `}<code parentName=\"p\" {...{\n              \"className\": \"language-text\"\n            }}>{`.env`}</code>{` file is in the root of your project so the Apollo CLI knows where to find it. You can also export `}<code parentName=\"p\" {...{\n              \"className\": \"language-text\"\n            }}>{`ENGINE_API_KEY`}</code>{` as an environment variable.`}</p>\n        </ExpansionPanelListItem>\n        <ExpansionPanelListItem number=\"3\" mdxType=\"ExpansionPanelListItem\">\n          <h4>Create an apollo.config.js file</h4>\n          <p>{`The commands executed through the Apollo CLI will be looking for your Apollo config to inform their behavior. To set up schema registration, you'll need to configure a source that the CLI can fetch your schema from like so:`}</p>\n          <div {...{\n            \"className\": \"gatsby-highlight\",\n            \"data-language\": \"js\"\n          }}><pre parentName=\"div\" {...{\n              \"style\": {\n                \"counterReset\": \"linenumber NaN\"\n              },\n              \"className\": \"language-js line-numbers\"\n            }}><code parentName=\"pre\" {...{\n                \"className\": \"language-js\"\n              }}><span parentName=\"code\" {...{\n                  \"className\": \"token comment\"\n                }}>{`// apollo.config.js`}</span>{`\nmodule`}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`.`}</span>{`exports `}<span parentName=\"code\" {...{\n                  \"className\": \"token operator\"\n                }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`{`}</span>{`\n  service`}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`{`}</span>{`\n    endpoint`}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`{`}</span>{`\n      url`}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n                  \"className\": \"token string\"\n                }}>{`\"http://localhost:4000\"`}</span>{`\n    `}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n                  \"className\": \"token comment\"\n                }}>{`// OR`}</span>{`\n    localSchemaFile`}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n                  \"className\": \"token string\"\n                }}>{`'./path/to/schema.graphql'`}</span>{`\n  `}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`}`}</span><span parentName=\"code\" {...{\n                  \"className\": \"token punctuation\"\n                }}>{`;`}</span></code><span parentName=\"pre\" {...{\n                \"aria-hidden\": \"true\",\n                \"className\": \"line-numbers-rows\",\n                \"style\": {\n                  \"whiteSpace\": \"normal\",\n                  \"width\": \"auto\",\n                  \"left\": \"0\"\n                }\n              }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n          <p>{`The `}<a parentName=\"p\" {...{\n              \"href\": \"/references/apollo-config/#clientservice\"\n            }}>{`Apollo config documentation`}</a>{` has more details and advanced configuration options for the `}<code parentName=\"p\" {...{\n              \"className\": \"language-text\"\n            }}>{`apollo.config.js`}</code>{` format.`}</p>\n        </ExpansionPanelListItem>\n        <ExpansionPanelListItem number=\"check\" mdxType=\"ExpansionPanelListItem\">\n  You're done!\n        </ExpansionPanelListItem>\n      </ExpansionPanelList>\n    </ExpansionPanel>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}