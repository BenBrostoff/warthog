{"expireTime":9007200819376322000,"key":"transformer-remark-markdown-html-ast-209d5938222544ef14f627378fa41b18-gatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-prismjsgatsby-remark-check-links-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Time to accomplish: "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"12 Minutes"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With Warthog Client, updating data from a graph API is as simple as calling a function. Additionally, the Warthog Client cache is smart enough to automatically update in most cases. In this section, we'll learn how to use the "},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>"},{"type":"text","value":" component from "},{"type":"raw","value":"<code class=\"language-text\">react-warthog</code>"},{"type":"text","value":" to login a user."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"what-is-a-mutation-component"},"children":[{"type":"element","tagName":"a","properties":{"href":"#what-is-a-mutation-component","aria-label":"what is a mutation component permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"What is a Mutation component?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>"},{"type":"text","value":" component is another important building block in an Warthog app. It's a React component that provides a function to execute a GraphQL mutation. Additionally, it tracks the loading, completion, and error state of that mutation."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Updating data with a "},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>"},{"type":"text","value":" component from "},{"type":"raw","value":"<code class=\"language-text\">react-warthog</code>"},{"type":"text","value":" is very similar to fetching data with a "},{"type":"raw","value":"<code class=\"language-text\">Query</code>"},{"type":"text","value":" component. The main difference is that the first argument to the "},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>"},{"type":"text","value":" render prop function is a "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"mutate function"}]},{"type":"text","value":" that actually triggers the mutation when it is called. The second argument to the "},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>"},{"type":"text","value":" render prop function is a result object that contains loading and error state, as well as the return value from the mutation. Let's see an example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"update-data-with-mutation"},"children":[{"type":"element","tagName":"a","properties":{"href":"#update-data-with-mutation","aria-label":"update data with mutation permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Update data with Mutation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first step is defining our GraphQL mutation. To start, navigate to "},{"type":"raw","value":"<code class=\"language-text\">src/pages/login.js</code>"},{"type":"text","value":" and copy the code below so we can start building out the login screen:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"src/pages/login.js"}]}]},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Mutation<span class=\"token punctuation\">,</span> ApolloConsumer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-warthog'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-tag'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoginForm<span class=\"token punctuation\">,</span> Loading <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">LOGIN_USER</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  mutation login($email: String!) {\n    login(email: $email)\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just like before, we're using the "},{"type":"raw","value":"<code class=\"language-text\">gql</code>"},{"type":"text","value":" function to wrap our GraphQL mutation so it can be parsed into an AST. We're also importing some components that we'll use in the next steps. Now, let's bind this mutation to our component by passing it to the "},{"type":"raw","value":"<code class=\"language-text\">mutation</code>"},{"type":"text","value":" prop:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"src/pages/login.js"}]}]},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mutation</span></span> <span class=\"token attr-name\">mutation</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">LOGIN_USER</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">login<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginForm</span></span> <span class=\"token attr-name\">login</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>login<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Mutation</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Our "},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>"},{"type":"text","value":" component takes a render prop function as a child that exposes a mutate function ("},{"type":"raw","value":"<code class=\"language-text\">login</code>"},{"type":"text","value":") and the data object returned from the mutation. Finally, we pass our login function to the "},{"type":"raw","value":"<code class=\"language-text\">LoginForm</code>"},{"type":"text","value":" component."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To create a better experience for our users, we want to persist the login between sessions. In order to do that, we need to save our login token to "},{"type":"raw","value":"<code class=\"language-text\">localStorage</code>"},{"type":"text","value":". Let's learn how we can use the "},{"type":"raw","value":"<code class=\"language-text\">onCompleted</code>"},{"type":"text","value":" handler on "},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>"},{"type":"text","value":" to persist our login:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"expose-warthog-client-with-apolloconsumer"},"children":[{"type":"element","tagName":"a","properties":{"href":"#expose-warthog-client-with-apolloconsumer","aria-label":"expose warthog client with apolloconsumer permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Expose Warthog Client with ApolloConsumer"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One of the main functions of "},{"type":"raw","value":"<code class=\"language-text\">react-warthog</code>"},{"type":"text","value":" is that it puts your "},{"type":"raw","value":"<code class=\"language-text\">ApolloClient</code>"},{"type":"text","value":" instance on React's context. Sometimes, we need to access the "},{"type":"raw","value":"<code class=\"language-text\">ApolloClient</code>"},{"type":"text","value":" instance to directly call a method that isn't exposed by the "},{"type":"raw","value":"<code class=\"language-text\">react-warthog</code>"},{"type":"text","value":" helper components. The "},{"type":"raw","value":"<code class=\"language-text\">ApolloConsumer</code>"},{"type":"text","value":" component can help us access the client."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">ApolloConsumer</code>"},{"type":"text","value":" takes a render prop function as a child that is called with the client instance. Let's wrap our "},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>"},{"type":"text","value":" component with "},{"type":"raw","value":"<code class=\"language-text\">ApolloConsumer</code>"},{"type":"text","value":" to expose the client. Next, we want to pass an "},{"type":"raw","value":"<code class=\"language-text\">onCompleted</code>"},{"type":"text","value":" callback to "},{"type":"raw","value":"<code class=\"language-text\">Mutation</code>"},{"type":"text","value":" that will be called once the mutation is complete with its return value. This callback is where we will save the login token to "},{"type":"raw","value":"<code class=\"language-text\">localStorage</code>"},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In our "},{"type":"raw","value":"<code class=\"language-text\">onCompleted</code>"},{"type":"text","value":" handler, we also call "},{"type":"raw","value":"<code class=\"language-text\">client.writeData</code>"},{"type":"text","value":" to write local data to the Warthog cache indicating that the user is logged in. This is an example of a "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"direct write"}]},{"type":"text","value":" that we'll explore further in the next section on local state management."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"src/pages/login.js"}]}]},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ApolloConsumer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">client</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span></span>        <span class=\"token operator\">&lt;</span>Mutation\n          mutation<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">LOGIN_USER</span><span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">          onCompleted<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> login <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">            localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">,</span> login<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">            client<span class=\"token punctuation\">.</span><span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> isLoggedIn<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>        <span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">login<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> loading<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// this loading state will probably never show, but it's helpful to</span>\n            <span class=\"token comment\">// have for testing</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loading<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loading</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">An error occurred</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginForm</span></span> <span class=\"token attr-name\">login</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>login<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Mutation</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ApolloConsumer</span></span><span class=\"token punctuation\">></span></span></span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"attach-authorization-headers-to-the-request"},"children":[{"type":"element","tagName":"a","properties":{"href":"#attach-authorization-headers-to-the-request","aria-label":"attach authorization headers to the request permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Attach authorization headers to the request"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We're almost done completing our login feature! Before we do, we need to attach our token to the GraphQL request's headers so our server can authorize the user. To do this, navigate to "},{"type":"raw","value":"<code class=\"language-text\">src/index.js</code>"},{"type":"text","value":" where we create our "},{"type":"raw","value":"<code class=\"language-text\">ApolloClient</code>"},{"type":"text","value":" and replace the code below for the constructor:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"src/index.js"}]}]},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  cache<span class=\"token punctuation\">,</span>\n  link<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    uri<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://localhost:4000/graphql'</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">    headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      authorization<span class=\"token punctuation\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncache<span class=\"token punctuation\">.</span><span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    isLoggedIn<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    cartItems<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Specifying the "},{"type":"raw","value":"<code class=\"language-text\">headers</code>"},{"type":"text","value":" option on "},{"type":"raw","value":"<code class=\"language-text\">HttpLink</code>"},{"type":"text","value":" allows us to read the token from "},{"type":"raw","value":"<code class=\"language-text\">localStorage</code>"},{"type":"text","value":" and attach it to the request's headers each time a GraphQL operation is made."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the next section, we'll add the "},{"type":"raw","value":"<code class=\"language-text\">&lt;Login&gt;</code>"},{"type":"text","value":" form to the user interface. For that, we need to learn how Warthog allows us to manage local state in our app."}]}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":115,"column":1,"offset":5265}}}}