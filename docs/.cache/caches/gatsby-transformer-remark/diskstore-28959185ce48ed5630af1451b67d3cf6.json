{"expireTime":9007200819376322000,"key":"transformer-remark-markdown-ast-579118c5fd046d4c4026983894d9acbc-gatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-prismjsgatsby-remark-check-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Time to accomplish: ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":21,"offset":21},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"15 Minutes","position":{"start":{"line":2,"column":22,"offset":22},"end":{"line":2,"column":32,"offset":32},"indent":[]}}],"position":{"start":{"line":2,"column":21,"offset":21},"end":{"line":2,"column":33,"offset":33},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":33,"offset":33},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In almost every app we build, we display a combination of remote data from our graph API and local data such as network status, form state, and more. What's awesome about Warthog Client is that it allows us to store local data inside the Warthog cache and query it alongside our remote data with GraphQL.","position":{"start":{"line":4,"column":1,"offset":35},"end":{"line":4,"column":305,"offset":339},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":35},"end":{"line":4,"column":305,"offset":339},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We recommend managing local state in the Warthog cache instead of bringing in another state management library like Redux so the Warthog cache can be a single source of truth.","position":{"start":{"line":6,"column":1,"offset":341},"end":{"line":6,"column":176,"offset":516},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":341},"end":{"line":6,"column":176,"offset":516},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Managing local data with Warthog Client is very similar to how you've already managed remote data in this tutorial. You'll write a client schema and resolvers for your local data. You'll also learn to query it with GraphQL just by specifying the ","position":{"start":{"line":8,"column":1,"offset":518},"end":{"line":8,"column":247,"offset":764},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@client</code>","position":{"start":{"line":8,"column":247,"offset":764},"end":{"line":8,"column":256,"offset":773},"indent":[]}},{"type":"text","value":" directive. Let's dive in!","position":{"start":{"line":8,"column":256,"offset":773},"end":{"line":8,"column":282,"offset":799},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":518},"end":{"line":8,"column":282,"offset":799},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#write-a-local-schema","title":null,"data":{"hProperties":{"aria-label":"write a local schema permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Write a local schema","position":{"start":{"line":10,"column":5,"offset":805},"end":{"line":10,"column":25,"offset":825},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":801},"end":{"line":10,"column":25,"offset":825},"indent":[]},"data":{"id":"write-a-local-schema","htmlAttributes":{"id":"write-a-local-schema"},"hProperties":{"id":"write-a-local-schema"}}},{"type":"paragraph","children":[{"type":"text","value":"Just like how a schema is the first step toward defining our data model on the server, writing a local schema is the first step we take on the client.","position":{"start":{"line":12,"column":1,"offset":827},"end":{"line":12,"column":151,"offset":977},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":827},"end":{"line":12,"column":151,"offset":977},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Navigate to ","position":{"start":{"line":14,"column":1,"offset":979},"end":{"line":14,"column":13,"offset":991},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">src/resolvers.js</code>","position":{"start":{"line":14,"column":13,"offset":991},"end":{"line":14,"column":31,"offset":1009},"indent":[]}},{"type":"text","value":" and copy the following code to create your client schema (as well as blank client resolvers for later):","position":{"start":{"line":14,"column":31,"offset":1009},"end":{"line":14,"column":135,"offset":1113},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":979},"end":{"line":14,"column":135,"offset":1113},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/resolvers.js","position":{"start":{"line":16,"column":2,"offset":1116},"end":{"line":16,"column":18,"offset":1132},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1115},"end":{"line":16,"column":19,"offset":1133},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1115},"end":{"line":16,"column":19,"offset":1133},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-tag'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  extend type Query {\n    isLoggedIn: Boolean!\n    cartItems: [ID!]!\n  }\n\n  extend type Launch {\n    isInCart: Boolean!\n  }\n\n  extend type Mutation {\n    addOrRemoveFromCart(id: ID!): [Launch]\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":18,"column":1,"offset":1135},"end":{"line":37,"column":4,"offset":1435},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To build a client schema, we ","position":{"start":{"line":39,"column":1,"offset":1437},"end":{"line":39,"column":30,"offset":1466},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"extend","position":{"start":{"line":39,"column":32,"offset":1468},"end":{"line":39,"column":38,"offset":1474},"indent":[]}}],"position":{"start":{"line":39,"column":30,"offset":1466},"end":{"line":39,"column":40,"offset":1476},"indent":[]}},{"type":"text","value":" the types of our server schema and wrap it with the ","position":{"start":{"line":39,"column":40,"offset":1476},"end":{"line":39,"column":93,"offset":1529},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">gql</code>","position":{"start":{"line":39,"column":93,"offset":1529},"end":{"line":39,"column":98,"offset":1534},"indent":[]}},{"type":"text","value":" function. Using the extend keyword allows us to combine both schemas inside developer tooling like Warthog VSCode and Warthog DevTools.","position":{"start":{"line":39,"column":98,"offset":1534},"end":{"line":39,"column":234,"offset":1670},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1437},"end":{"line":39,"column":234,"offset":1670},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can also add local fields to server data by extending types from our server. Here, we're adding the ","position":{"start":{"line":41,"column":1,"offset":1672},"end":{"line":41,"column":104,"offset":1775},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isInCart</code>","position":{"start":{"line":41,"column":104,"offset":1775},"end":{"line":41,"column":114,"offset":1785},"indent":[]}},{"type":"text","value":" local field to the ","position":{"start":{"line":41,"column":114,"offset":1785},"end":{"line":41,"column":134,"offset":1805},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Launch</code>","position":{"start":{"line":41,"column":134,"offset":1805},"end":{"line":41,"column":142,"offset":1813},"indent":[]}},{"type":"text","value":" type we receive back from our graph API.","position":{"start":{"line":41,"column":142,"offset":1813},"end":{"line":41,"column":183,"offset":1854},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1672},"end":{"line":41,"column":183,"offset":1854},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#initialize-the-store","title":null,"data":{"hProperties":{"aria-label":"initialize the store permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Initialize the store","position":{"start":{"line":43,"column":4,"offset":1859},"end":{"line":43,"column":24,"offset":1879},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1856},"end":{"line":43,"column":24,"offset":1879},"indent":[]},"data":{"id":"initialize-the-store","htmlAttributes":{"id":"initialize-the-store"},"hProperties":{"id":"initialize-the-store"}}},{"type":"paragraph","children":[{"type":"text","value":"Now that we've created our client schema, let's learn how to initialize the store. Since queries execute as soon as the component mounts, it's important for us to warm the Warthog cache with some default state so those queries don't error out. We will need to write initial data to the cache for both ","position":{"start":{"line":45,"column":1,"offset":1881},"end":{"line":45,"column":302,"offset":2182},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isLoggedIn</code>","position":{"start":{"line":45,"column":302,"offset":2182},"end":{"line":45,"column":314,"offset":2194},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":45,"column":314,"offset":2194},"end":{"line":45,"column":319,"offset":2199},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cartItems</code>","position":{"start":{"line":45,"column":319,"offset":2199},"end":{"line":45,"column":330,"offset":2210},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":45,"column":330,"offset":2210},"end":{"line":45,"column":331,"offset":2211},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1881},"end":{"line":45,"column":331,"offset":2211},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Jump back to ","position":{"start":{"line":47,"column":1,"offset":2213},"end":{"line":47,"column":14,"offset":2226},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">src/index.js</code>","position":{"start":{"line":47,"column":14,"offset":2226},"end":{"line":47,"column":28,"offset":2240},"indent":[]}},{"type":"text","value":" and notice we had already added a ","position":{"start":{"line":47,"column":28,"offset":2240},"end":{"line":47,"column":63,"offset":2275},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cache.writeData</code>","position":{"start":{"line":47,"column":63,"offset":2275},"end":{"line":47,"column":80,"offset":2292},"indent":[]}},{"type":"text","value":" call to prepare the cache in the last section. While we're here, make sure to also import the ","position":{"start":{"line":47,"column":80,"offset":2292},"end":{"line":47,"column":175,"offset":2387},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">typeDefs</code>","position":{"start":{"line":47,"column":175,"offset":2387},"end":{"line":47,"column":185,"offset":2397},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":47,"column":185,"offset":2397},"end":{"line":47,"column":190,"offset":2402},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">resolvers</code>","position":{"start":{"line":47,"column":190,"offset":2402},"end":{"line":47,"column":201,"offset":2413},"indent":[]}},{"type":"text","value":" that we just created so we can use them later:","position":{"start":{"line":47,"column":201,"offset":2413},"end":{"line":47,"column":248,"offset":2460},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":2213},"end":{"line":47,"column":248,"offset":2460},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/index.js","position":{"start":{"line":49,"column":2,"offset":2463},"end":{"line":49,"column":14,"offset":2475},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2462},"end":{"line":49,"column":15,"offset":2476},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2462},"end":{"line":49,"column":15,"offset":2476},"indent":[]}},{"type":"html","lang":"js{1,11-12,15-20}","meta":null,"value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resolvers<span class=\"token punctuation\">,</span> typeDefs <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./resolvers'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  cache<span class=\"token punctuation\">,</span>\n  link<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    uri<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://localhost:4000/graphql'</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      authorization<span class=\"token punctuation\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  typeDefs<span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  resolvers<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">cache<span class=\"token punctuation\">.</span><span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    isLoggedIn<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    cartItems<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":51,"column":1,"offset":2478},"end":{"line":72,"column":4,"offset":2877},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now that we've added default state to the Warthog cache, let's learn how to query local data from within our React components.","position":{"start":{"line":74,"column":1,"offset":2879},"end":{"line":74,"column":127,"offset":3005},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2879},"end":{"line":74,"column":127,"offset":3005},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#query-local-data","title":null,"data":{"hProperties":{"aria-label":"query local data permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Query local data","position":{"start":{"line":76,"column":4,"offset":3010},"end":{"line":76,"column":20,"offset":3026},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":3007},"end":{"line":76,"column":20,"offset":3026},"indent":[]},"data":{"id":"query-local-data","htmlAttributes":{"id":"query-local-data"},"hProperties":{"id":"query-local-data"}}},{"type":"paragraph","children":[{"type":"text","value":"Querying local data from the Warthog cache is almost the same as querying remote data from a graph API. The only difference is that you add a ","position":{"start":{"line":78,"column":1,"offset":3028},"end":{"line":78,"column":143,"offset":3170},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@client</code>","position":{"start":{"line":78,"column":143,"offset":3170},"end":{"line":78,"column":152,"offset":3179},"indent":[]}},{"type":"text","value":" directive to a local field to tell Warthog Client to pull it from the cache.","position":{"start":{"line":78,"column":152,"offset":3179},"end":{"line":78,"column":229,"offset":3256},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3028},"end":{"line":78,"column":229,"offset":3256},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's look at an example where we query the ","position":{"start":{"line":80,"column":1,"offset":3258},"end":{"line":80,"column":45,"offset":3302},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isLoggedIn</code>","position":{"start":{"line":80,"column":45,"offset":3302},"end":{"line":80,"column":57,"offset":3314},"indent":[]}},{"type":"text","value":" field we wrote to the cache in the last mutation exercise.","position":{"start":{"line":80,"column":57,"offset":3314},"end":{"line":80,"column":116,"offset":3373},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":3258},"end":{"line":80,"column":116,"offset":3373},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/index.js","position":{"start":{"line":82,"column":2,"offset":3376},"end":{"line":82,"column":14,"offset":3388},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3375},"end":{"line":82,"column":15,"offset":3389},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3375},"end":{"line":82,"column":15,"offset":3389},"indent":[]}},{"type":"html","lang":"jsx{8,17-19}","meta":null,"value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Query<span class=\"token punctuation\">,</span> ApolloProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-warthog'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-tag'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Pages <span class=\"token keyword\">from</span> <span class=\"token string\">'./pages'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Login <span class=\"token keyword\">from</span> <span class=\"token string\">'./pages/login'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> injectStyles <span class=\"token keyword\">from</span> <span class=\"token string\">'./styles'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token constant\">IS_LOGGED_IN</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></span>  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">injectStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ApolloProvider</span></span> <span class=\"token attr-name\">client</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>client<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Query</span></span> <span class=\"token attr-name\">query</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">IS_LOGGED_IN</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>isLoggedIn <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Pages</span></span> <span class=\"token punctuation\">/></span></span> <span class=\"token punctuation\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Login</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Query</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ApolloProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":84,"column":1,"offset":3391},"end":{"line":107,"column":4,"offset":3918},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"First, we create our ","position":{"start":{"line":109,"column":1,"offset":3920},"end":{"line":109,"column":22,"offset":3941},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">IsUserLoggedIn</code>","position":{"start":{"line":109,"column":22,"offset":3941},"end":{"line":109,"column":38,"offset":3957},"indent":[]}},{"type":"text","value":" local query by adding the ","position":{"start":{"line":109,"column":38,"offset":3957},"end":{"line":109,"column":65,"offset":3984},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@client</code>","position":{"start":{"line":109,"column":65,"offset":3984},"end":{"line":109,"column":74,"offset":3993},"indent":[]}},{"type":"text","value":" directive to the ","position":{"start":{"line":109,"column":74,"offset":3993},"end":{"line":109,"column":92,"offset":4011},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isLoggedIn</code>","position":{"start":{"line":109,"column":92,"offset":4011},"end":{"line":109,"column":104,"offset":4023},"indent":[]}},{"type":"text","value":" field. Then, we render a ","position":{"start":{"line":109,"column":104,"offset":4023},"end":{"line":109,"column":130,"offset":4049},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":109,"column":130,"offset":4049},"end":{"line":109,"column":137,"offset":4056},"indent":[]}},{"type":"text","value":" component, pass our local query in, and specify a render prop function that renders either a login screen or the homepage depending if the user is logged in. Since cache reads are synchronous, we don't have to account for any loading state.","position":{"start":{"line":109,"column":137,"offset":4056},"end":{"line":109,"column":378,"offset":4297},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3920},"end":{"line":109,"column":378,"offset":4297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's look at another example of a component that queries local state in ","position":{"start":{"line":111,"column":1,"offset":4299},"end":{"line":111,"column":74,"offset":4372},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">src/pages/cart.js</code>","position":{"start":{"line":111,"column":74,"offset":4372},"end":{"line":111,"column":93,"offset":4391},"indent":[]}},{"type":"text","value":". Just like before, we create our query:","position":{"start":{"line":111,"column":93,"offset":4391},"end":{"line":111,"column":133,"offset":4431},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4299},"end":{"line":111,"column":133,"offset":4431},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/pages/cart.js","position":{"start":{"line":113,"column":2,"offset":4434},"end":{"line":113,"column":19,"offset":4451},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4433},"end":{"line":113,"column":20,"offset":4452},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4433},"end":{"line":113,"column":20,"offset":4452},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Fragment <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Query <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-warthog'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-tag'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Header<span class=\"token punctuation\">,</span> Loading <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../components'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CartItem<span class=\"token punctuation\">,</span> BookTrips <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../containers'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">GET_CART_ITEMS</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query GetCartItems {\n    cartItems @client\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":115,"column":1,"offset":4454},"end":{"line":128,"column":4,"offset":4765},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Next, we render our ","position":{"start":{"line":130,"column":1,"offset":4767},"end":{"line":130,"column":21,"offset":4787},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Query</code>","position":{"start":{"line":130,"column":21,"offset":4787},"end":{"line":130,"column":28,"offset":4794},"indent":[]}},{"type":"text","value":" component and bind it to our ","position":{"start":{"line":130,"column":28,"offset":4794},"end":{"line":130,"column":58,"offset":4824},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">GetCartItems</code>","position":{"start":{"line":130,"column":58,"offset":4824},"end":{"line":130,"column":72,"offset":4838},"indent":[]}},{"type":"text","value":" query:","position":{"start":{"line":130,"column":72,"offset":4838},"end":{"line":130,"column":79,"offset":4845},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":4767},"end":{"line":130,"column":79,"offset":4845},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/pages/cart.js","position":{"start":{"line":132,"column":2,"offset":4848},"end":{"line":132,"column":19,"offset":4865},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4847},"end":{"line":132,"column":20,"offset":4866},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4847},"end":{"line":132,"column":20,"offset":4866},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Cart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Query</span></span> <span class=\"token attr-name\">query</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">GET_CART_ITEMS</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> loading<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loading<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loading</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">ERROR: </span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Header</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">My Cart</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Header</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>data<span class=\"token punctuation\">.</span>cartItems <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>data<span class=\"token punctuation\">.</span>cartItems<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>empty-message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">No items in your cart</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>cartItems<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">launchId</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CartItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>launchId<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">launchId</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>launchId<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BookTrips</span></span> <span class=\"token attr-name\">cartItems</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>cartItems<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Query</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":134,"column":1,"offset":4868},"end":{"line":160,"column":4,"offset":5638},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's important to note that you can mix local queries with remote queries in a single GraphQL document. Now that you're a pro at querying local data with GraphQL, let's learn how to add local fields to server data.","position":{"start":{"line":162,"column":1,"offset":5640},"end":{"line":162,"column":215,"offset":5854},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5640},"end":{"line":162,"column":215,"offset":5854},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#adding-virtual-fields-to-server-data","title":null,"data":{"hProperties":{"aria-label":"adding virtual fields to server data permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Adding virtual fields to server data","position":{"start":{"line":164,"column":5,"offset":5860},"end":{"line":164,"column":41,"offset":5896},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5856},"end":{"line":164,"column":41,"offset":5896},"indent":[]},"data":{"id":"adding-virtual-fields-to-server-data","htmlAttributes":{"id":"adding-virtual-fields-to-server-data"},"hProperties":{"id":"adding-virtual-fields-to-server-data"}}},{"type":"paragraph","children":[{"type":"text","value":"One of the unique advantages of managing your local data with Warthog Client is that you can add ","position":{"start":{"line":166,"column":1,"offset":5898},"end":{"line":166,"column":98,"offset":5995},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"virtual fields","position":{"start":{"line":166,"column":100,"offset":5997},"end":{"line":166,"column":114,"offset":6011},"indent":[]}}],"position":{"start":{"line":166,"column":98,"offset":5995},"end":{"line":166,"column":116,"offset":6013},"indent":[]}},{"type":"text","value":" to data you receive back from your graph API. These fields only exist on the client and are useful for decorating server data with local state. In our example, we're going to add an ","position":{"start":{"line":166,"column":116,"offset":6013},"end":{"line":166,"column":299,"offset":6196},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isInCart</code>","position":{"start":{"line":166,"column":299,"offset":6196},"end":{"line":166,"column":309,"offset":6206},"indent":[]}},{"type":"text","value":" virtual field to our ","position":{"start":{"line":166,"column":309,"offset":6206},"end":{"line":166,"column":331,"offset":6228},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Launch</code>","position":{"start":{"line":166,"column":331,"offset":6228},"end":{"line":166,"column":339,"offset":6236},"indent":[]}},{"type":"text","value":" type.","position":{"start":{"line":166,"column":339,"offset":6236},"end":{"line":166,"column":345,"offset":6242},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5898},"end":{"line":166,"column":345,"offset":6242},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To add a virtual field, first extend the type of the data you're adding the field to in your client schema. Here, we're extending the ","position":{"start":{"line":168,"column":1,"offset":6244},"end":{"line":168,"column":135,"offset":6378},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Launch</code>","position":{"start":{"line":168,"column":135,"offset":6378},"end":{"line":168,"column":143,"offset":6386},"indent":[]}},{"type":"text","value":" type:","position":{"start":{"line":168,"column":143,"offset":6386},"end":{"line":168,"column":149,"offset":6392},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":6244},"end":{"line":168,"column":149,"offset":6392},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/resolvers.js","position":{"start":{"line":170,"column":2,"offset":6395},"end":{"line":170,"column":18,"offset":6411},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":6394},"end":{"line":170,"column":19,"offset":6412},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":6394},"end":{"line":170,"column":19,"offset":6412},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-tag'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> schema <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  extend type Launch {\n    isInCart: Boolean!\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":172,"column":1,"offset":6414},"end":{"line":180,"column":4,"offset":6535},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Next, specify a client resolver on the ","position":{"start":{"line":182,"column":1,"offset":6537},"end":{"line":182,"column":40,"offset":6576},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Launch</code>","position":{"start":{"line":182,"column":40,"offset":6576},"end":{"line":182,"column":48,"offset":6584},"indent":[]}},{"type":"text","value":" type to tell Warthog Client how to resolve your virtual field:","position":{"start":{"line":182,"column":48,"offset":6584},"end":{"line":182,"column":111,"offset":6647},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":6537},"end":{"line":182,"column":111,"offset":6647},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/resolvers.js","position":{"start":{"line":184,"column":2,"offset":6650},"end":{"line":184,"column":18,"offset":6666},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":6649},"end":{"line":184,"column":19,"offset":6667},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":6649},"end":{"line":184,"column":19,"offset":6667},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Launch<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">isInCart</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">launch<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> cache <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> cartItems <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">readQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> query<span class=\"token punctuation\">:</span> <span class=\"token constant\">GET_CART_ITEMS</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> cartItems<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>launch<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":186,"column":1,"offset":6669},"end":{"line":195,"column":4,"offset":6890},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We're going to learn more about client resolvers in the section below. The important thing to note is that the resolver API on the client is the same as the resolver API on the server.","position":{"start":{"line":197,"column":1,"offset":6892},"end":{"line":197,"column":185,"offset":7076},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":6892},"end":{"line":197,"column":185,"offset":7076},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now, you're ready to query your virtual field on the launch detail page! Similar to the previous examples, just add your virtual field to a query and specify the ","position":{"start":{"line":199,"column":1,"offset":7078},"end":{"line":199,"column":163,"offset":7240},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@client</code>","position":{"start":{"line":199,"column":163,"offset":7240},"end":{"line":199,"column":172,"offset":7249},"indent":[]}},{"type":"text","value":" directive.","position":{"start":{"line":199,"column":172,"offset":7249},"end":{"line":199,"column":183,"offset":7260},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":7078},"end":{"line":199,"column":183,"offset":7260},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/pages/launch.js","position":{"start":{"line":201,"column":2,"offset":7263},"end":{"line":201,"column":21,"offset":7282},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":7262},"end":{"line":201,"column":22,"offset":7283},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":7262},"end":{"line":201,"column":22,"offset":7283},"indent":[]}},{"type":"html","lang":"js{4}","meta":null,"value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">GET_LAUNCH_DETAILS</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query LaunchDetails($launchId: ID!) {\n    launch(id: $launchId) {\n<span class=\"gatsby-highlight-code-line\">      isInCart @client</span>      site\n      rocket {\n        type\n      }\n      ...LaunchTile\n    }\n  }\n  </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">LAUNCH_TILE_DATA</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":203,"column":1,"offset":7285},"end":{"line":217,"column":4,"offset":7529},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#update-local-data","title":null,"data":{"hProperties":{"aria-label":"update local data permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Update local data","position":{"start":{"line":219,"column":4,"offset":7534},"end":{"line":219,"column":21,"offset":7551},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":7531},"end":{"line":219,"column":21,"offset":7551},"indent":[]},"data":{"id":"update-local-data","htmlAttributes":{"id":"update-local-data"},"hProperties":{"id":"update-local-data"}}},{"type":"paragraph","children":[{"type":"text","value":"Up until now, we've focused on querying local data from the Warthog cache. Warthog Client also lets you update local data in the cache with either ","position":{"start":{"line":221,"column":1,"offset":7553},"end":{"line":221,"column":148,"offset":7700},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"direct cache writes","position":{"start":{"line":221,"column":150,"offset":7702},"end":{"line":221,"column":169,"offset":7721},"indent":[]}}],"position":{"start":{"line":221,"column":148,"offset":7700},"end":{"line":221,"column":171,"offset":7723},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":221,"column":171,"offset":7723},"end":{"line":221,"column":175,"offset":7727},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"client resolvers","position":{"start":{"line":221,"column":177,"offset":7729},"end":{"line":221,"column":193,"offset":7745},"indent":[]}}],"position":{"start":{"line":221,"column":175,"offset":7727},"end":{"line":221,"column":195,"offset":7747},"indent":[]}},{"type":"text","value":". Direct writes are typically used to write simple booleans or strings to the cache whereas client resolvers are for more complicated writes such as adding or removing data from a list.","position":{"start":{"line":221,"column":195,"offset":7747},"end":{"line":221,"column":380,"offset":7932},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":7553},"end":{"line":221,"column":380,"offset":7932},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#direct-cache-writes","title":null,"data":{"hProperties":{"aria-label":"direct cache writes permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Direct cache writes","position":{"start":{"line":223,"column":5,"offset":7938},"end":{"line":223,"column":24,"offset":7957},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":7934},"end":{"line":223,"column":24,"offset":7957},"indent":[]},"data":{"id":"direct-cache-writes","htmlAttributes":{"id":"direct-cache-writes"},"hProperties":{"id":"direct-cache-writes"}}},{"type":"paragraph","children":[{"type":"text","value":"Direct cache writes are convenient when you want to write a simple field, like a boolean or a string, to the Warthog cache. We perform a direct write by calling ","position":{"start":{"line":225,"column":1,"offset":7959},"end":{"line":225,"column":162,"offset":8120},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">client.writeData()</code>","position":{"start":{"line":225,"column":162,"offset":8120},"end":{"line":225,"column":182,"offset":8140},"indent":[]}},{"type":"text","value":" and passing in an object with a data property that corresponds to the data we want to write to the cache. We've already seen an example of a direct write, when we called ","position":{"start":{"line":225,"column":182,"offset":8140},"end":{"line":225,"column":353,"offset":8311},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">client.writeData</code>","position":{"start":{"line":225,"column":353,"offset":8311},"end":{"line":225,"column":371,"offset":8329},"indent":[]}},{"type":"text","value":" in the ","position":{"start":{"line":225,"column":371,"offset":8329},"end":{"line":225,"column":379,"offset":8337},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">onCompleted</code>","position":{"start":{"line":225,"column":379,"offset":8337},"end":{"line":225,"column":392,"offset":8350},"indent":[]}},{"type":"text","value":" handler for the login ","position":{"start":{"line":225,"column":392,"offset":8350},"end":{"line":225,"column":415,"offset":8373},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":225,"column":415,"offset":8373},"end":{"line":225,"column":425,"offset":8383},"indent":[]}},{"type":"text","value":" component. Let's look at a similar example, where we copy the code below to create a logout button:","position":{"start":{"line":225,"column":425,"offset":8383},"end":{"line":225,"column":525,"offset":8483},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7959},"end":{"line":225,"column":525,"offset":8483},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/containers/logout-button.js","position":{"start":{"line":227,"column":2,"offset":8486},"end":{"line":227,"column":33,"offset":8517},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":8485},"end":{"line":227,"column":34,"offset":8518},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":8485},"end":{"line":227,"column":34,"offset":8518},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'react-emotion'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApolloConsumer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-warthog'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> menuItemClassName <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../components/menu-item'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ReactComponent <span class=\"token keyword\">as</span> ExitIcon <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../assets/icons/exit.svg'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">LogoutButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ApolloConsumer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">client</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>StyledButton\n          onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">            client<span class=\"token punctuation\">.</span><span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> isLoggedIn<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>            localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExitIcon</span></span> <span class=\"token punctuation\">/></span></span>\n          Logout\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">StyledButton</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ApolloConsumer</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> StyledButton <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>menuItemClassName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  background<span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n  border<span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n  padding<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":229,"column":1,"offset":8520},"end":{"line":260,"column":4,"offset":9274},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When we click the button, we perform a direct cache write by calling ","position":{"start":{"line":262,"column":1,"offset":9276},"end":{"line":262,"column":70,"offset":9345},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">client.writeData</code>","position":{"start":{"line":262,"column":70,"offset":9345},"end":{"line":262,"column":88,"offset":9363},"indent":[]}},{"type":"text","value":" and passing in a data object that sets the ","position":{"start":{"line":262,"column":88,"offset":9363},"end":{"line":262,"column":132,"offset":9407},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isLoggedIn</code>","position":{"start":{"line":262,"column":132,"offset":9407},"end":{"line":262,"column":144,"offset":9419},"indent":[]}},{"type":"text","value":" boolean to false.","position":{"start":{"line":262,"column":144,"offset":9419},"end":{"line":262,"column":162,"offset":9437},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":9276},"end":{"line":262,"column":162,"offset":9437},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can also perform direct writes within the ","position":{"start":{"line":264,"column":1,"offset":9439},"end":{"line":264,"column":46,"offset":9484},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">update</code>","position":{"start":{"line":264,"column":46,"offset":9484},"end":{"line":264,"column":54,"offset":9492},"indent":[]}},{"type":"text","value":" function of a ","position":{"start":{"line":264,"column":54,"offset":9492},"end":{"line":264,"column":69,"offset":9507},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":264,"column":69,"offset":9507},"end":{"line":264,"column":79,"offset":9517},"indent":[]}},{"type":"text","value":" component. The ","position":{"start":{"line":264,"column":79,"offset":9517},"end":{"line":264,"column":95,"offset":9533},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">update</code>","position":{"start":{"line":264,"column":95,"offset":9533},"end":{"line":264,"column":103,"offset":9541},"indent":[]}},{"type":"text","value":" function allows us to manually update the cache after a mutation occurs without refetching data. Let's look at an example in ","position":{"start":{"line":264,"column":103,"offset":9541},"end":{"line":264,"column":229,"offset":9667},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">src/containers/book-trips.js</code>","position":{"start":{"line":264,"column":229,"offset":9667},"end":{"line":264,"column":259,"offset":9697},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":264,"column":259,"offset":9697},"end":{"line":264,"column":260,"offset":9698},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":9439},"end":{"line":264,"column":260,"offset":9698},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/containers/book-trips.js","position":{"start":{"line":266,"column":2,"offset":9701},"end":{"line":266,"column":30,"offset":9729},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":9700},"end":{"line":266,"column":31,"offset":9730},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":9700},"end":{"line":266,"column":31,"offset":9730},"indent":[]}},{"type":"html","lang":"jsx{30-32}","meta":null,"value":"<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Mutation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-warthog'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-tag'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">'../components/button'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">GET_LAUNCH</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./cart-item'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">BOOK_TRIPS</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  mutation BookTrips($launchIds: [ID]!) {\n    bookTrips(launchIds: $launchIds) {\n      success\n      message\n      launches {\n        id\n        isBooked\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">BookTrips</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> cartItems <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Mutation\n      mutation<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">BOOK_TRIPS</span><span class=\"token punctuation\">}</span>\n      variables<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> launchIds<span class=\"token punctuation\">:</span> cartItems <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      refetchQueries<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>cartItems<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">launchId</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        query<span class=\"token punctuation\">:</span> <span class=\"token constant\">GET_LAUNCH</span><span class=\"token punctuation\">,</span>\n        variables<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> launchId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">      update<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">cache</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        cache<span class=\"token punctuation\">.</span><span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> cartItems<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>    <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bookTrips<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> loading<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        data <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>bookTrips <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>data<span class=\"token punctuation\">.</span>bookTrips<span class=\"token punctuation\">.</span>success <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>bookTrips<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>bookTrips<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">data-testid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>book-button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">            Book All</span>\n<span class=\"token plain-text\">          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Mutation</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":268,"column":1,"offset":9732},"end":{"line":314,"column":4,"offset":10834},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, we're directly calling ","position":{"start":{"line":316,"column":1,"offset":10836},"end":{"line":316,"column":41,"offset":10876},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cache.writeData</code>","position":{"start":{"line":316,"column":41,"offset":10876},"end":{"line":316,"column":58,"offset":10893},"indent":[]}},{"type":"text","value":" to reset the state of the ","position":{"start":{"line":316,"column":58,"offset":10893},"end":{"line":316,"column":85,"offset":10920},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cartItems</code>","position":{"start":{"line":316,"column":85,"offset":10920},"end":{"line":316,"column":96,"offset":10931},"indent":[]}},{"type":"text","value":" after the ","position":{"start":{"line":316,"column":96,"offset":10931},"end":{"line":316,"column":107,"offset":10942},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">BookTrips</code>","position":{"start":{"line":316,"column":107,"offset":10942},"end":{"line":316,"column":118,"offset":10953},"indent":[]}},{"type":"text","value":" mutation is sent to the server. This direct write is performed inside of the update function, which is passed our Warthog Client instance.","position":{"start":{"line":316,"column":118,"offset":10953},"end":{"line":316,"column":257,"offset":11092},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":10836},"end":{"line":316,"column":257,"offset":11092},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#local-resolvers","title":null,"data":{"hProperties":{"aria-label":"local resolvers permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Local resolvers","position":{"start":{"line":318,"column":5,"offset":11098},"end":{"line":318,"column":20,"offset":11113},"indent":[]}}],"position":{"start":{"line":318,"column":1,"offset":11094},"end":{"line":318,"column":20,"offset":11113},"indent":[]},"data":{"id":"local-resolvers","htmlAttributes":{"id":"local-resolvers"},"hProperties":{"id":"local-resolvers"}}},{"type":"paragraph","children":[{"type":"text","value":"We're not done yet! What if we wanted to perform a more complicated local data update such as adding or removing items from a list? For this situation, we'll use a local resolver. Local resolvers have the same function signature as remote resolvers (","position":{"start":{"line":320,"column":1,"offset":11115},"end":{"line":320,"column":251,"offset":11365},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(parent, args, context, info) =&gt; data</code>","position":{"start":{"line":320,"column":251,"offset":11365},"end":{"line":320,"column":290,"offset":11404},"indent":[]}},{"type":"text","value":"). The only difference is that the Warthog cache is already added to the context for you. Inside your resolver, you'll use the cache to read and write data.","position":{"start":{"line":320,"column":290,"offset":11404},"end":{"line":320,"column":446,"offset":11560},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":11115},"end":{"line":320,"column":446,"offset":11560},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's write the local resolver for the ","position":{"start":{"line":322,"column":1,"offset":11562},"end":{"line":322,"column":40,"offset":11601},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">addOrRemoveFromCart</code>","position":{"start":{"line":322,"column":40,"offset":11601},"end":{"line":322,"column":61,"offset":11622},"indent":[]}},{"type":"text","value":" mutation. You should place this resolver underneath the ","position":{"start":{"line":322,"column":61,"offset":11622},"end":{"line":322,"column":118,"offset":11679},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Launch</code>","position":{"start":{"line":322,"column":118,"offset":11679},"end":{"line":322,"column":126,"offset":11687},"indent":[]}},{"type":"text","value":" resolver we wrote earlier.","position":{"start":{"line":322,"column":126,"offset":11687},"end":{"line":322,"column":153,"offset":11714},"indent":[]}}],"position":{"start":{"line":322,"column":1,"offset":11562},"end":{"line":322,"column":153,"offset":11714},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/resolvers.js","position":{"start":{"line":324,"column":2,"offset":11717},"end":{"line":324,"column":18,"offset":11733},"indent":[]}}],"position":{"start":{"line":324,"column":1,"offset":11716},"end":{"line":324,"column":19,"offset":11734},"indent":[]}}],"position":{"start":{"line":324,"column":1,"offset":11716},"end":{"line":324,"column":19,"offset":11734},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Mutation<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">addOrRemoveFromCart</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> cache <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> cartItems <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">readQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> query<span class=\"token punctuation\">:</span> <span class=\"token constant\">GET_CART_ITEMS</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        cartItems<span class=\"token punctuation\">:</span> cartItems<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n          <span class=\"token operator\">?</span> cartItems<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span> <span class=\"token operator\">=></span> i <span class=\"token operator\">!==</span> id<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>cartItems<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      cache<span class=\"token punctuation\">.</span><span class=\"token function\">writeQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> query<span class=\"token punctuation\">:</span> <span class=\"token constant\">GET_CART_ITEMS</span><span class=\"token punctuation\">,</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span>cartItems<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":326,"column":1,"offset":11736},"end":{"line":341,"column":4,"offset":12160},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this resolver, we destructure the Warthog ","position":{"start":{"line":343,"column":1,"offset":12162},"end":{"line":343,"column":46,"offset":12207},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cache</code>","position":{"start":{"line":343,"column":46,"offset":12207},"end":{"line":343,"column":53,"offset":12214},"indent":[]}},{"type":"text","value":" from the context in order to read the query that fetches cart items. Once we have our cart data, we either remove or add the cart item's ","position":{"start":{"line":343,"column":53,"offset":12214},"end":{"line":343,"column":191,"offset":12352},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">id</code>","position":{"start":{"line":343,"column":191,"offset":12352},"end":{"line":343,"column":195,"offset":12356},"indent":[]}},{"type":"text","value":" passed into the mutation to the list. Finally, we return the updated list from the mutation.","position":{"start":{"line":343,"column":195,"offset":12356},"end":{"line":343,"column":288,"offset":12449},"indent":[]}}],"position":{"start":{"line":343,"column":1,"offset":12162},"end":{"line":343,"column":288,"offset":12449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's see how we call the ","position":{"start":{"line":345,"column":1,"offset":12451},"end":{"line":345,"column":27,"offset":12477},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">addOrRemoveFromCart</code>","position":{"start":{"line":345,"column":27,"offset":12477},"end":{"line":345,"column":48,"offset":12498},"indent":[]}},{"type":"text","value":" mutation in a component:","position":{"start":{"line":345,"column":48,"offset":12498},"end":{"line":345,"column":73,"offset":12523},"indent":[]}}],"position":{"start":{"line":345,"column":1,"offset":12451},"end":{"line":345,"column":73,"offset":12523},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/containers/action-button.js","position":{"start":{"line":347,"column":2,"offset":12526},"end":{"line":347,"column":33,"offset":12557},"indent":[]}}],"position":{"start":{"line":347,"column":1,"offset":12525},"end":{"line":347,"column":34,"offset":12558},"indent":[]}}],"position":{"start":{"line":347,"column":1,"offset":12525},"end":{"line":347,"column":34,"offset":12558},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-tag'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">TOGGLE_CART</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  mutation addOrRemoveFromCart($launchId: ID!) {\n    addOrRemoveFromCart(id: $launchId) @client\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":349,"column":1,"offset":12560},"end":{"line":357,"column":4,"offset":12729},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Just like before, the only thing we need to add to our mutation is a ","position":{"start":{"line":359,"column":1,"offset":12731},"end":{"line":359,"column":70,"offset":12800},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@client</code>","position":{"start":{"line":359,"column":70,"offset":12800},"end":{"line":359,"column":79,"offset":12809},"indent":[]}},{"type":"text","value":" directive to tell Warthog to resolve this mutation from the cache instead of a remote server.","position":{"start":{"line":359,"column":79,"offset":12809},"end":{"line":359,"column":173,"offset":12903},"indent":[]}}],"position":{"start":{"line":359,"column":1,"offset":12731},"end":{"line":359,"column":173,"offset":12903},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now that our local mutation is complete, let's build out the rest of the ","position":{"start":{"line":361,"column":1,"offset":12905},"end":{"line":361,"column":74,"offset":12978},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ActionButton</code>","position":{"start":{"line":361,"column":74,"offset":12978},"end":{"line":361,"column":88,"offset":12992},"indent":[]}},{"type":"text","value":" component so we can finish building the cart:","position":{"start":{"line":361,"column":88,"offset":12992},"end":{"line":361,"column":134,"offset":13038},"indent":[]}}],"position":{"start":{"line":361,"column":1,"offset":12905},"end":{"line":361,"column":134,"offset":13038},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"src/containers/action-button.js","position":{"start":{"line":363,"column":2,"offset":13041},"end":{"line":363,"column":33,"offset":13072},"indent":[]}}],"position":{"start":{"line":363,"column":1,"offset":13040},"end":{"line":363,"column":34,"offset":13073},"indent":[]}}],"position":{"start":{"line":363,"column":1,"offset":13040},"end":{"line":363,"column":34,"offset":13073},"indent":[]}},{"type":"html","lang":"jsx","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Mutation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-warthog'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> gql <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-tag'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">GET_LAUNCH_DETAILS</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../pages/launch'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">'../components/button'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CANCEL_TRIP</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  mutation cancel($launchId: ID!) {\n    cancelTrip(launchId: $launchId) {\n      success\n      message\n      launches {\n        id\n        isBooked\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ActionButton</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isBooked<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> isInCart <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mutation</span></span>\n      <span class=\"token attr-name\">mutation</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isBooked <span class=\"token operator\">?</span> <span class=\"token constant\">CANCEL_TRIP</span> <span class=\"token punctuation\">:</span> <span class=\"token constant\">TOGGLE_CART</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">variables</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> launchId<span class=\"token punctuation\">:</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">refetchQueries</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          query<span class=\"token punctuation\">:</span> <span class=\"token constant\">GET_LAUNCH_DETAILS</span><span class=\"token punctuation\">,</span>\n          variables<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> launchId<span class=\"token punctuation\">:</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mutate<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> loading<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loading<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Loading...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">An error occurred</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span>\n              <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>mutate<span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">isBooked</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isBooked<span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">data-testid</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'action-button'</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>isBooked\n                <span class=\"token operator\">?</span> <span class=\"token string\">'Cancel This Trip'</span>\n                <span class=\"token punctuation\">:</span> isInCart\n                <span class=\"token operator\">?</span> <span class=\"token string\">'Remove from Cart'</span>\n                <span class=\"token punctuation\">:</span> <span class=\"token string\">'Add to Cart'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Mutation</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":365,"column":1,"offset":13075},"end":{"line":421,"column":4,"offset":14352},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, we're using the ","position":{"start":{"line":423,"column":1,"offset":14354},"end":{"line":423,"column":34,"offset":14387},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isBooked</code>","position":{"start":{"line":423,"column":34,"offset":14387},"end":{"line":423,"column":44,"offset":14397},"indent":[]}},{"type":"text","value":" prop passed into the component to determine which mutation we should fire. Just like remote mutations, we can pass in our local mutations to the same ","position":{"start":{"line":423,"column":44,"offset":14397},"end":{"line":423,"column":195,"offset":14548},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Mutation</code>","position":{"start":{"line":423,"column":195,"offset":14548},"end":{"line":423,"column":205,"offset":14558},"indent":[]}},{"type":"text","value":" component.","position":{"start":{"line":423,"column":205,"offset":14558},"end":{"line":423,"column":216,"offset":14569},"indent":[]}}],"position":{"start":{"line":423,"column":1,"offset":14354},"end":{"line":423,"column":216,"offset":14569},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":425,"column":1,"offset":14571},"end":{"line":425,"column":4,"offset":14574},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Congratulations! 🎉 You've officially made it to the end of the Warthog platform tutorial. In the final section, we're going to recap what we just learned and give you guidance on what you should learn next.","position":{"start":{"line":427,"column":1,"offset":14576},"end":{"line":427,"column":208,"offset":14783},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":14576},"end":{"line":427,"column":208,"offset":14783},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":428,"column":1,"offset":14784}}}}