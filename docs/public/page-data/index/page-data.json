{"componentChunkName":"component---node-modules-gatsby-theme-apollo-docs-src-components-template-js","path":"/","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":null,"description":null,"subtitle":null}},"file":{"childMarkdownRemark":null,"childMdx":{"frontmatter":{"title":"Welcome","description":"Start here to learn about the Warthog GraphQL API Framework"},"headings":[],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Welcome\",\n  \"description\": \"Start here to learn about the Warthog GraphQL API Framework\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Welcome! \\uD83D\\uDC4B We're excited you're here to learn about Warthog.\"), mdx(\"p\", null, \"The Warthog GraphQL platform is an implementation of GraphQL that helps you manage data from the cloud to your UI. It's incrementally adoptable and can be layered over your existing services, including REST APIs and databases. Warthog includes two open-source libraries for the client and server, in addition to developer tooling that provides everything you need to run a graph API in production with confidence.\"), mdx(ButtonWrapper, {\n    mdxType: \"ButtonWrapper\"\n  }, mdx(ButtonLink, {\n    size: \"large\",\n    color: \"branded\",\n    to: \"/tutorial/introduction\",\n    mdxType: \"ButtonLink\"\n  }, \"Try it out!\"), mdx(ButtonLink, {\n    size: \"large\",\n    to: \"/intro/platform\",\n    mdxType: \"ButtonLink\"\n  }, \"Learn more\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/platform-e80a1c35cc2a5400ab4a3f977fd4727c.jpg\",\n    \"alt\": \"Graph layer\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"fde2fd07-57c3-5c3c-af3b-a9d447fef5ba","sidebarContents":[{"title":null,"pages":[{"title":"Welcome","path":"/"},{"title":"The Warthog GraphQL platform","path":"/intro/platform/"},{"title":"Why GraphQL?","path":"/intro/benefits/"}]},{"title":"Tutorial","pages":[{"title":"0. Introduction","path":"/tutorial/introduction/"},{"title":"1. Build a schema","path":"/tutorial/schema/"},{"title":"2. Hook up your data sources","path":"/tutorial/data-source/"},{"title":"3. Write your graph's resolvers","path":"/tutorial/resolvers/"},{"title":"4. Run your graph in production","path":"/tutorial/production/"},{"title":"5. Connect your API to a client","path":"/tutorial/client/"},{"title":"6. Fetch data with queries","path":"/tutorial/queries/"},{"title":"7. Update data with mutations","path":"/tutorial/mutations/"},{"title":"8. Manage local state","path":"/tutorial/local-state/"}]},{"title":"Platform","pages":[{"title":"Tracking your GraphQL schema","path":"/platform/schema-registry/"},{"title":"Validating schema changes","path":"/platform/schema-validation/"},{"title":"Identifying clients","path":"/platform/client-awareness/"},{"title":"Securing your graph","path":"/platform/operation-registry/"},{"title":"Connecting Warthog to your editor","path":"/platform/editor-plugins/"},{"title":"Analyzing performance","path":"/platform/performance/"},{"title":"Integrate with third party services","path":"/platform/integrations/"},{"title":"Managing a federated graph","path":"/platform/federation/"}]},{"title":"Resources","pages":[{"anchor":true,"title":"Principled GraphQL","path":"https://principledgraphql.com"},{"title":"GraphQL Glossary","path":"/resources/graphql-glossary/"},{"title":"Frequently Asked Questions","path":"/resources/faq/"}]},{"title":"References","pages":[{"title":"Turning on analytics","path":"/references/setup-analytics/"},{"title":"Warthog Engine proxy (deprecated)","path":"/references/engine-proxy/"},{"title":"","path":"/references/engine-proxy-release-notes/"}]}],"githubUrl":"https://github.com/goldcaddy77/warthog/tree/master/docs/source/index.mdx","spectrumPath":"warthog","versions":[]}}}